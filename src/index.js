const MORSE_TABLE = {
    '.-': 'a',
    '-...': 'b',
    '-.-.': 'c',
    '-..': 'd',
    '.': 'e',
    '..-.': 'f',
    '--.': 'g',
    '....': 'h',
    '..': 'i',
    '.---': 'j',
    '-.-': 'k',
    '.-..': 'l',
    '--': 'm',
    '-.': 'n',
    '---': 'o',
    '.--.': 'p',
    '--.-': 'q',
    '.-.': 'r',
    '...': 's',
    '-': 't',
    '..-': 'u',
    '...-': 'v',
    '.--': 'w',
    '-..-': 'x',
    '-.--': 'y',
    '--..': 'z',
    '.----': '1',
    '..---': '2',
    '...--': '3',
    '....-': '4',
    '.....': '5',
    '-....': '6',
    '--...': '7',
    '---..': '8',
    '----.': '9',
    '-----': '0',
};

function decode(expr) {
    var message = ""; // будем записывать раскодированные символы

    while (expr.length >= 10) { // выполняем пока длина выражения больше 10 символов
        var symbol = expr.slice(0, 10); // копируем 10 символов, с 0 по 9 включительно, с этой позиции включая, 1 цифра - с какого символа начинаем , 2 цифра - сколько мы берем символов  (изучить отличие substr и slice)
        symbol = symbol.replace(/00/g, ""); // все пары двух нулей вырезаем, оставляя пустое место
        symbol = symbol.replace(/10/g, "."); // все 10 вырезаем, оставляя пустое место
        symbol = symbol.replace(/11/g, "-"); // все 11 вырезаем, оставляя пустое место
        symbol = symbol.replace("**********", ' '); // если 10 звездочек, то ставим пробел пробел


        if (symbol != " ") { // если символ не пробел, то по этому ключу ищем значение в константе
            message += MORSE_TABLE[symbol]; //добавляем символ
        } else { // если символ пробел
            message += " "; //добавляем пробел
        }

        expr = expr.slice(10); // так как нет второго параметра, то копирует до конца строки начиная с 10 символа, перезаписываем значение
    }
    return message; // выводим результат
}

module.exports = {
    decode
}